FROM ubuntu:20.04

ARG ZOO_MY_ID
ENV ZOO_MY_ID $ZOO_MY_ID

# JMX
ARG JMX_PORT
ENV JMX_PORT $JMX_PORT
ARG JMX_RMI_SERVER_HOST_NAME
ENV ZOOKEEPER_SERVER_OPTS "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.port=${JMX_PORT} -Dcom.sun.management.jmxremote.rmi.port=${JMX_PORT} -Djava.rmi.server.hostname=${JMX_RMI_SERVER_HOST_NAME} -Djava.net.preferIPv4Stack=true"

## Atualiza o sistema, instala pacotes úteis, e o OpenJDK 8
RUN apt-get update && apt-get install -y \
        wget \
        ca-certificates \
        zip \
        net-tools \
        nano \
        tar \
        netcat \
        openjdk-8-jdk

## Para instalações on premise do ZooKeeper e Kafka,
## ajuste o swap para ser acionado em cargas somente 99% ou maiores.
## Não funciona no Docker.
# RUN sysctl vm.swappiness=1
# RUN echo "vm.swappiness=1" | tee --append /etc/sysctl.conf

## Baixa e descompacta o Kafka para '/kafka'
## Para selecionar outra versão, busque um mirror aqui:
## https://kafka.apache.org/downloads
WORKDIR /
RUN wget https://downloads.apache.org/kafka/2.8.0/kafka_2.13-2.8.0.tgz && \
    tar -xvzf kafka_2.13-2.8.0.tgz && \
    rm kafka_2.13-2.8.0.tgz && \
    mv kafka_2.13-2.8.0 kafka

WORKDIR /kafka

## Copia o arquivo de configurações
COPY zookeeper.properties config/zookeeper.properties

## Inicia o ZooKeeper (como serviço) na porta 2181, admin na porta 8010
# COPY zookeeper.d /etc/init.d/zookeeper
# RUN chmod +x /etc/init.d/zookeeper
# RUN chown root:root /etc/init.d/zookeeper
# RUN update-rc.d zookeeper defaults
# EXPOSE 2181 8010

## Para iniciar manualmente, use uma das opções abaixo:
# bin/zookeeper-server-start.sh config/zookeeper.properties
# bin/zookeeper-server-start.sh -daemon config/zookeeper.properties

## Para verificar a execução, faça:
# nc -vz localhost 2181
# echo srvr | nc localhost 2181 ; echo

# CMD echo "--------- ZooKeeper quórum node [$ZOO_MY_ID] ---------" && \
#     echo $ZOO_MY_ID > /data/zookeeper/myid && \
#     service zookeeper start && \
#     sleep 5s && \
#     tail -F /kafka/logs/zookeeper.out

## A linha "echo $ZOO_MY_ID > /data/zookeeper/myid"
## define o identificador do servidor no cluster
## caso seja o único, pode retirar

CMD echo "--------- ZooKeeper quórum node id [$ZOO_MY_ID] ---------" && \
    echo $ZOO_MY_ID > /data/zookeeper/myid && \
    bin/zookeeper-server-start.sh config/zookeeper.properties